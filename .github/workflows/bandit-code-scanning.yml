name: Bandit Code Scanning - Reusable Workflow

on:
  workflow_call:
    inputs:
      scan-path:
        description: 'Path to scan with Bandit'
        required: false
        type: string
        default: '.'
      confidence-level:
        description: 'Confidence level (low, medium, high)'
        required: false
        type: string
        default: 'high'
      severity-level:
        description: 'Severity level (low, medium, high)'
        required: false
        type: string
        default: 'high'
      exclude-paths:
        description: 'Comma-separated paths to exclude'
        required: false
        type: string
        default: ''
      output-format:
        description: 'Output format (sarif, json, txt)'
        required: false
        type: string
        default: 'sarif'
      upload-sarif:
        description: 'Upload SARIF results to GitHub Security'
        required: false
        type: boolean
        default: true

permissions:
  contents: read
  security-events: write
  actions: read

jobs:
  bandit-scan:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      actions: read

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Bandit
        run: |
          python -m pip install --upgrade pip
          pip install bandit[toml]

      - name: Run Bandit Security Scan
        run: |
          BANDIT_CMD="bandit -r ${{ inputs.scan-path }}"
          
          # Add confidence and severity
          BANDIT_CMD="$BANDIT_CMD --confidence-level ${{ inputs.confidence-level }}"
          BANDIT_CMD="$BANDIT_CMD --severity-level ${{ inputs.severity-level }}"
          
          # Add excludes if provided
          if [ -n "${{ inputs.exclude-paths }}" ]; then
            BANDIT_CMD="$BANDIT_CMD --exclude ${{ inputs.exclude-paths }}"
          fi
          
          # Set output format and file
          if [ "${{ inputs.output-format }}" = "sarif" ]; then
            BANDIT_CMD="$BANDIT_CMD -f sarif -o bandit-results.sarif"
          elif [ "${{ inputs.output-format }}" = "json" ]; then
            BANDIT_CMD="$BANDIT_CMD -f json -o bandit-results.json"
          else
            BANDIT_CMD="$BANDIT_CMD -f txt -o bandit-results.txt"
          fi
          
          # Run scan (don't fail on findings, just generate report)
          $BANDIT_CMD || true

      - name: Upload SARIF to GitHub Security
        if: inputs.upload-sarif && inputs.output-format == 'sarif'
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: bandit-results.sarif

      - name: Upload Bandit results
        uses: actions/upload-artifact@v4
        with:
          name: bandit-scan-results-${{ github.run_number }}
          path: bandit-results.*
          retention-days: 30
          if-no-files-found: warn
