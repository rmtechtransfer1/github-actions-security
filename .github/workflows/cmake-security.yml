name: CMake Security - Reusable Workflow

on:
  workflow_call:
    inputs:
      build-type:
        description: 'CMake build type (Release, Debug, RelWithDebInfo, etc.)'
        required: false
        type: string
        default: 'Release'
      source-dir:
        description: 'Source directory path'
        required: false
        type: string
        default: '.'
      build-dir:
        description: 'Build directory name'
        required: false
        type: string
        default: 'build'
      cmake-args:
        description: 'Additional CMake arguments'
        required: false
        type: string
        default: ''
      clang-tidy-checks:
        description: 'Clang-tidy checks to run'
        required: false
        type: string
        default: ''
      upload-artifacts:
        description: 'Upload build artifacts'
        required: false
        type: boolean
        default: true
    outputs:
      build-output-dir:
        description: 'Build output directory path'
        value: ${{ jobs.cmake-security.outputs.build-output-dir }}
      artifact-name:
        description: 'Name of uploaded artifacts'
        value: ${{ jobs.cmake-security.outputs.artifact-name }}

permissions:
  contents: read
  security-events: write

jobs:
  cmake-security:
    runs-on: ubuntu-latest
    outputs:
      build-output-dir: ${{ steps.strings.outputs.build-output-dir }}
      artifact-name: ${{ steps.artifacts.outputs.artifact-name }}
      
    steps:
    - uses: actions/checkout@v4

    - name: Install security tools
      run: |
        sudo apt-get update
        sudo apt-get install -y clang-tidy cmake ninja-build build-essential

    - name: Set reusable strings
      id: strings
      shell: bash
      run: |
        echo "build-output-dir=${{ github.workspace }}/${{ inputs.build-dir }}" >> "$GITHUB_OUTPUT"

    - name: Configure CMake
      run: >
        cmake -B ${{ steps.strings.outputs.build-output-dir }}
        -DCMAKE_BUILD_TYPE=${{ inputs.build-type }}
        -DCMAKE_EXPORT_COMPILE_COMMANDS=ON
        ${{ inputs.cmake-args }}
        -S ${{ inputs.source-dir }}

    - name: Build
      run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ inputs.build-type }}

    - name: Test
      working-directory: ${{ steps.strings.outputs.build-output-dir }}
      run: ctest --build-config ${{ inputs.build-type }}

    - name: Run Clang-tidy Security Scan
      run: |
        if [ -n "${{ inputs.clang-tidy-checks }}" ]; then
          run-clang-tidy -p ${{ steps.strings.outputs.build-output-dir }} -checks="${{ inputs.clang-tidy-checks }}"
        else
          run-clang-tidy -p ${{ steps.strings.outputs.build-output-dir }}
        fi

    - name: Prepare artifacts
      if: inputs.upload-artifacts
      id: artifacts
      run: |
        ARTIFACT_NAME="cmake-build-${{ github.run_number }}"
        echo "artifact-name=$ARTIFACT_NAME" >> "$GITHUB_OUTPUT"

    - name: Upload build artifacts
      if: inputs.upload-artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ steps.artifacts.outputs.artifact-name }}
        path: |
          ${{ steps.strings.outputs.build-output-dir }}/bin/
          ${{ steps.strings.outputs.build-output-dir }}/**/cli_app
        retention-days: 7
        if-no-files-found: warn