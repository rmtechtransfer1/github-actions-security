name: CMake/C++ Security Workflow

on:
  workflow_call:
    inputs:
      build-type:
        description: 'CMake build type'
        required: false
        default: 'Release'
        type: string
      source-dir:
        description: 'Source directory'
        required: false
        default: '.'
        type: string
      build-dir:
        description: 'Build directory'
        required: false
        default: 'build'
        type: string
      cmake-args:
        description: 'Additional CMake arguments'
        required: false
        default: ''
        type: string
      upload-artifacts:
        description: 'Upload build artifacts'
        required: false
        default: true
        type: boolean
    outputs:
      artifact-name:
        description: 'Name of the uploaded artifact'
        value: ${{ jobs.cmake-build-and-scan.outputs.artifact-name }}
      build-status:
        description: 'Build status'
        value: ${{ jobs.cmake-build-and-scan.outputs.build-status }}

jobs:
  cmake-build-and-scan:
    runs-on: ubuntu-latest
    outputs:
      artifact-name: ${{ steps.artifact.outputs.name }}
      build-status: ${{ steps.build.outputs.status }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive
    
    - name: Setup C++ dependencies and tools
      uses: ./.github/actions/setup-dependencies/c++
      with:
        cmake-build-type: ${{ inputs.build-type }}
        install-security-tools: 'true'
    
    - name: Configure CMake
      run: |
        cmake -B ${{ inputs.build-dir }} \
          -S ${{ inputs.source-dir }} \
          -DCMAKE_BUILD_TYPE=${{ inputs.build-type }} \
          ${{ inputs.cmake-args }}
    
    - name: Build
      id: build
      run: |
        cmake --build ${{ inputs.build-dir }} --config ${{ inputs.build-type }}
        echo "status=success" >> "$GITHUB_OUTPUT"
    
    - name: Prepare artifacts
      id: artifact
      if: inputs.upload-artifacts
      run: |
        ARTIFACT_NAME="cmake-build-${{ github.run_number }}"
        echo "name=$ARTIFACT_NAME" >> "$GITHUB_OUTPUT"
    
    - name: Upload build artifacts
      if: inputs.upload-artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ steps.artifact.outputs.name }}
        path: ${{ inputs.build-dir }}
        retention-days: 7